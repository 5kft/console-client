File encryption format

We have a global AES-256 key and 128 bit global (for the file) IV.

Sector = 4096 bytes.

The file is split in 4096-byte blocks. Each block is encrypted using
AES256-CTR.

For every block there's one SIGN 128-bit block, the format for which is:

hmac-sha1
and over it, in the beginning:
2 bits revision length (1, 2 or 3 bytes)
next 6 bits as from hmac-sha
1,2 or 3 bytes revision

the hmac-sha1 is calculated on the following, concatenated:
data;
sector id (64 bit);
revision id (32 bit).

the secret is the per-file IV.

(sector id is the consecutive number of 4k sector of DATA/plaintext in
the file, starting from 0 (zero) )

For the AES256-CTR, the IV is the 128 bit SIGN block.

The SIGN blocks are written for every 256 blocks after them in a 4KB
block, encrypted using AES-ECB. They cannot repeat, as the sector number
is different for each one.


The SIGN blocks create a hash tree. The first level is the SIGN blocks,
the second level is blocks of hmac-sha1 of every 256 lower-level SIGN
blocks (a sector), the third is hmac-sha1 of the lower level of 256
hmac-sha1 blocks, and up to until you're left with only one block, which
is at the end of the file. All such blocks are encrypted with
AES256-ECB.


On every change of a block, the revision is increased with 1. On
revision overflow (2^24) the file SHOULD be reencrypted with a different
IV.

Every read reads at least 4KB, the block with the SIGN block related to
it, and the upper level of the SIGN, to verify them.
